# data file for the Fltk User Interface Designer (fluid)
version 1.0400
header_name {.h}
code_name {.cxx}
comment {//
// Setting and shell dialogs for the Fast Light Tool Kit (FLTK).
//
// Copyright 1998-2020 by Bill Spitzak and others.
//
// This library is free software. Distribution and use rights are outlined in
// the file "COPYING" which should have been included with this file.  If this
// file is missing or damaged, see the license at:
//
//     https://www.fltk.org/COPYING.php
//
// Please see the following page on how to report bugs and issues:
//
//     https://www.fltk.org/bugs.php
//
} {in_source in_header
}

decl {\#include "fltk-admin.h"} {private global
}

decl {\#include <string.h>} {private global
}

decl {\#include <FL/Fl_Choice.H>} {public global
}

Function {update_from_system_option(Fl_Choice *w)} {open return_type void
} {
  code {int v = get_system_option(g_option[w->argument()].name);
w->value(v==-1?2:v);} {}
}

Function {update_from_user_option(Fl_Choice *w)} {open return_type void
} {
  code {int v = get_user_option(g_option[w->argument()].name);
w->value(v==-1?2:v);} {}
}

Function {set_system_option(Fl_Widget *w, void *v)} {open return_type void
} {
  code {Fl_Choice *o = (Fl_Choice*)w;
set_system_option(g_option[o->argument()].name, o->mvalue()->argument());} {}
}

Function {set_user_option(Fl_Widget *w, void *v)} {open return_type void
} {
  code {Fl_Choice *o = (Fl_Choice*)w;
set_user_option(g_option[o->argument()].name, o->mvalue()->argument());} {}
}

Function {create_options_editor()} {open
} {
  Fl_Window options_editor {
    label {FLTK Preferences} open selected
    xywh {566 245 405 531} type Double color 50 align 80 visible
  } {
    Fl_Group {} {
      label {Keyboard Focus Options} open
      xywh {10 10 385 96} box THIN_DOWN_BOX color 50 labelfont 2 labelsize 15 align 21
    } {
      Fl_Box {} {
        label {System:}
        xywh {225 16 75 24} labelsize 13
      }
      Fl_Box {} {
        label {User:}
        xywh {308 16 75 24} labelsize 13
      }
      Fl_Choice wSystemVisibleFocus {
        label {Visible Keyboard Focus:}
        user_data {Fl::OPTION_VISIBLE_FOCUS} user_data_type long
        callback set_system_option open
        tooltip {OPTION_VISIBLE_FOCUS

If visible focus is switched on, FLTK will draw a dotted rectangle inside the widget that will receive the next keystroke. If switched off, no such indicator will be drawn and keyboard navigation is disabled.

Default is on.} xywh {225 40 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_system_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {10 10 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {10 10 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {10 10 31 20} labelsize 13
        }
      }
      Fl_Choice wUserVisibleFocus {
        user_data {Fl::OPTION_VISIBLE_FOCUS} user_data_type long
        callback set_user_option open
        tooltip {OPTION_VISIBLE_FOCUS

If visible focus is switched on, FLTK will draw a dotted rectangle inside the widget that will receive the next keystroke. If switched off, no such indicator will be drawn and keyboard navigation is disabled.

Default is on.} xywh {308 40 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_user_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {10 10 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {10 10 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {10 10 31 20} labelsize 13
        }
      }
      Fl_Choice wSystemArrowFocus {
        label {Arrow Keys move Focus:}
        user_data {Fl::OPTION_ARROW_FOCUS} user_data_type long
        callback set_system_option open
        tooltip {OPTION_ARROW_FOCUS

When switched on, moving the text cursor beyond the start or end of the text in a text widget will change focus to the next widget. When switched off, the cursor will stop at the end of the text. Pressing Tab or Ctrl-Tab will advance the keyboard focus. Switch this on, if you want the old behavior of FLTK 1.1.

Default is off.} xywh {225 71 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_system_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {0 0 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {0 0 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {0 0 31 20} labelsize 13
        }
      }
      Fl_Choice wUserArrowFocus {
        user_data {Fl::OPTION_ARROW_FOCUS} user_data_type long
        callback set_user_option open
        tooltip {OPTION_ARROW_FOCUS

When switched on, moving the text cursor beyond the start or end of the text in a text widget will change focus to the next widget. When switched off, the cursor will stop at the end of the text. Pressing Tab or Ctrl-Tab will advance the keyboard focus. Switch this on, if you want the old behavior of FLTK 1.1.

Default is off.} xywh {308 71 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_user_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {0 0 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {0 0 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {0 0 31 20} labelsize 13
        }
      }
    }
    Fl_Group {} {
      label {Tooltip Options} open
      xywh {10 115 385 65} box THIN_DOWN_BOX color 50 labelfont 2 labelsize 15 align 21
    } {
      Fl_Choice wSystemShowTooltips {
        label {Show Tooltips:}
        user_data {Fl::OPTION_SHOW_TOOLTIPS} user_data_type long
        callback set_system_option open
        tooltip {OPTION_SHOW_TOOLTIPS

If tooltips are enabled, hovering the mouse over a widget with a tooltip text will open a little tooltip window until the mouse leaves the widget. If disabled, no tooltip is shown.

Default is on.} xywh {225 145 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_system_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {10 10 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {10 10 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {10 10 31 20} labelsize 13
        }
      }
      Fl_Choice wUserShowTooltips {
        user_data {Fl::OPTION_SHOW_TOOLTIPS} user_data_type long
        callback set_user_option open
        tooltip {OPTION_SHOW_TOOLTIPS

If tooltips are enabled, hovering the mouse over a widget with a tooltip text will open a little tooltip window until the mouse leaves the widget. If disabled, no tooltip is shown.

Default is on.} xywh {308 145 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_user_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {10 10 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {10 10 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {10 10 31 20} labelsize 13
        }
      }
    }
    Fl_Group {} {
      label {Drag And Drop Options} open
      xywh {10 190 385 65} box THIN_DOWN_BOX color 50 labelfont 2 labelsize 15 align 21
    } {
      Fl_Choice wSystemDNDText {
        label {Allow dragging Text:}
        user_data {Fl::OPTION_DND_TEXT} user_data_type long
        callback set_system_option open
        tooltip {OPTION_DND_TEXT

If text drag-and-drop is enabled, the user can select and drag text from any text widget. If disabled, no dragging is possible, however dropping text from other applications still works.

Default is on.} xywh {225 220 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_system_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {30 30 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
      }
      Fl_Choice wUserDNDText {
        user_data {Fl::OPTION_DND_TEXT} user_data_type long
        callback set_user_option open
        tooltip {OPTION_DND_TEXT

If text drag-and-drop is enabled, the user can select and drag text from any text widget. If disabled, no dragging is possible, however dropping text from other applications still works.

Default is on.} xywh {308 220 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_user_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {30 30 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
      }
    }
    Fl_Group {} {
      label {Native File Chooser Options} open
      xywh {10 265 385 65} box THIN_DOWN_BOX color 50 labelfont 2 labelsize 15 align 21
    } {
      Fl_Choice wSystemGTKText {
        label {Native File Chooser uses GTK:}
        user_data {Fl::OPTION_FNFC_USES_GTK} user_data_type long
        callback set_system_option open
        tooltip {OPTION_FNFC_USES_GTK

If 'Native File Chooser uses GTK' is enabled, the Fl_Native_File_Chooser class
calls the GTK open/save file dialogs when they are available on the platfom. If disabled, the Fl_Native_File_Chooser class
always uses FLTK's own file dialog (i.e., Fl_File_Chooser) even if GTK is available.

Default is on.} xywh {225 295 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_system_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {30 30 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
      }
      Fl_Choice wUserGTKText {
        user_data {Fl::OPTION_FNFC_USES_GTK} user_data_type long
        callback set_user_option open
        tooltip {OPTION_FNFC_USES_GTK

If 'Native File Chooser uses GTK' is enabled, the Fl_Native_File_Chooser class
calls the GTK open/save file dialogs when they are available on the platfom. If disabled, the Fl_Native_File_Chooser class
always uses FLTK's own file dialog (i.e., Fl_File_Chooser) even if GTK is available.

Default is on.} xywh {308 295 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_user_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {30 30 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
      }
    }
    Fl_Group {} {
      label {Print dialog Options} open
      xywh {10 340 385 65} box THIN_DOWN_BOX color 50 labelfont 2 labelsize 15 align 21
    } {
      Fl_Choice wSystemPrintGTKText {
        label {Print dialog uses GTK:}
        user_data {Fl::OPTION_PRINTER_USES_GTK} user_data_type long
        callback set_system_option open
        tooltip {OPTION_PRINTER_USES_GTK

If 'Print dialog uses GTK' is enabled, the Fl_Printer class
calls the GTK print dialog when it's available on the platfom. If disabled, the Fl_Printer class
always uses FLTK's own print dialog even if GTK is available.

Default is on.} xywh {225 370 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_system_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {30 30 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
      }
      Fl_Choice wUserPrintGTKText {
        user_data {Fl::OPTION_PRINTER_USES_GTK} user_data_type long
        callback set_user_option open
        tooltip {OPTION_PRINTER_USES_GTK

If 'Print dialog uses GTK' is enabled, the Fl_Printer class
calls the GTK print dialog when it's available on the platfom. If disabled, the Fl_Printer class
always uses FLTK's own print dialog even if GTK is available.

Default is on.} xywh {308 370 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_user_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {30 30 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
      }
    }
    Fl_Group {} {
      label {Scaling Factor Options} open
      xywh {10 415 385 65} box THIN_DOWN_BOX color 50 labelfont 2 labelsize 15 align 21
    } {
      Fl_Choice wSystemShowZoomFactor {
        label {Transiently show scaling factor:}
        user_data {Fl::OPTION_SHOW_SCALING} user_data_type long
        callback set_system_option open
        tooltip {OPTION_SHOW_SCALING

If 'Transiently show scaling factor' is enabled, the library shows in a transient yellow window the display
scaling factor value when it is changed. If disabled, no such transient window is used.

Default is on.} xywh {225 445 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_system_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {30 30 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
      }
      Fl_Choice wUserShowZoomFactor {
        user_data {Fl::OPTION_SHOW_SCALING} user_data_type long
        callback set_user_option open
        tooltip {OPTION_SHOW_SCALING

If 'Transiently show scaling factor' is enabled, the library shows in a transient yellow window the display
scaling factor value when it is changed. If disabled, no such transient window is used.

Default is on.} xywh {308 445 75 22} down_box BORDER_BOX labelsize 13
        code0 {update_from_user_option(o);}
      } {
        MenuItem {} {
          label off
          user_data 0 user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
        MenuItem {} {
          label on
          user_data 1 user_data_type long
          xywh {30 30 31 20} labelsize 13 divider
        }
        MenuItem {} {
          label default
          user_data {-1} user_data_type long
          xywh {30 30 31 20} labelsize 13
        }
      }
    }
    Fl_Button {} {
      label Close
      callback {options_editor->hide();}
      xywh {295 494 75 25} color 50
    }
  }
}
